@use "../component/index" as *;

.main {
  // background-color: $bg-main-color;

  &__content {
    @include container-width;
    margin-block: rem(100);
  

    display: grid;
   grid-template-columns: repeat(3,1fr);
    gap: rem(20);

    @media (width <= 920px) {
      grid-template-columns: repeat(2, 1fr);
    }

    @media (width <= 700px) {
      grid-template-columns: 1fr;
    }

    &-card {
      position: relative;
      color: $text-card-color;

      &::before {
        position: absolute;
        content: "";
        z-index: -1;
        top: 0;
        right: 0;
        background-color: transparent;
        width: 40%;
        height: 44px;
        border-bottom-left-radius: $border-radius;
        box-shadow: -40px 20px 0 $bg-card-color;
      }

      &::after {
        position: absolute;
        top: 0;
        right: 0;
        font-weight: 800;
        background-color: $bg-card-color;
        width: calc(40% - 5px);
        height: 40px;
        border-radius: $border-radius;
        @include flex-default(flex, center, center);
      }

      img {
        max-width: 100%;
        object-fit: cover;
      }

      &-author {
        background-color: $bg-card-color;
        width: 60%;
        padding-block: rem(5);
        padding-inline: rem(20);
        display: grid;
        gap: rem(20);
        align-content: space-between;
        grid-template-columns: 50px 1fr;
        border-top-left-radius: $border-radius;
        border-top-right-radius: $border-radius;

        // &-img img {
        // }

        &-name {
          // justify-self: end;
          z-index: 1;
          text-transform: uppercase;
          @include flex-default(flex, center, center);
          flex-direction: column;
          gap: rem(5);
          font-size: rem(17);
        }
      }
      &-product {
        background-color: $bg-card-color;
        z-index: 1;
        border-top-right-radius: $border-radius;
        text-align: center;
        @include flex-default(flex, center, center);
        padding-top: rem(1);

        height: rem(300);

        img {
          transition: 0.3s;
          transform: scale(0.8);

          &:hover {
            transform: scale(1.1) translate(-5px, 10px);
          }
        }
      }

      &-infor {
        background-color: $bg-card-color;
        text-align: center;
        padding: rem(10);

        h1 {
          font-size: rem(40);
        }
      }

      &-actions {
        background-color: $bg-card-color;
        border-bottom-left-radius: $border-radius;
        border-bottom-right-radius: $border-radius;
        padding: rem(20);
        @include flex-default(flex, space-between, center);

        &-add {
          @include flex-default(flex, space-between, center);

          gap: rem(30);
          font-size: rem(20);
          padding: rem(5);
          border-radius: $border-radius;
          box-shadow: 0 0 rem(5) rgba(255, 255, 255, 0.2);
          cursor: pointer;
        }

        &-btn {
          button {
            border: none;
            background-color: rgba(0, 0, 0, 0.2);
            box-shadow: 0 0 rem(5) rgba(255, 255, 255, 0.2);
            border-radius: $border-radius;
            padding: rem(8) rem(15);
            color: $text-color;
            font-size: rem(15);
            font-weight: 600;
            cursor: pointer;
          }
        }
      }
    }
  }

  // adding states to each card

  .main__content-card:nth-child(2n) {
    --is-Popular: true;
  }
  .main__content-card:nth-child(2n - 1) {
    --is-Popular: true;
  }
  .main__content-card:nth-child(n) {
    --is-Popular: true;
  }

  .main__content-card:nth-child(3n) {
    --is-New: true;
  }

  // styeling the tag based on states

  @container style(--is-Popular:true) {
    .main__content-card::after {
      content: "ðŸ”¥ Popular";
    }
    .main__content-card-actions {
      box-shadow: 0 rem(5) 0 #ff6723;
    }
  }

  // when the state is new

  @container style(--is-New:true) {
    .main__content-card::after {
      content: "ðŸ†• New";
    }
    .main__content-card-actions {
      box-shadow: 0 rem(5) 0 #00a6ed;
    }
  }

  // when the state is sold out
  @container style(--is-Out:true) {
    .main__content-card::after {
      content: "ðŸš« Sold out";
    }
    .main__content-card-actions {
      box-shadow: 0 rem(5) 0 rgba(255, 0, 0, 0.781);
    }
  }
}
